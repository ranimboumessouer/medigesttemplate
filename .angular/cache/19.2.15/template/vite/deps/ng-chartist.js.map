{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng-chartist/fesm2022/ng-chartist.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { inject, ElementRef, EventEmitter, Output, Input, Component, NgModule } from '@angular/core';\nimport { BarChart, LineChart, PieChart } from 'chartist';\n\n/**\n * Angular component which renders Chartist chart.\n *\n * See Chartist {@link https://gionkunz.github.io/chartist-js/api-documentation.html API documentation} and\n * {@link https://gionkunz.github.io/chartist-js/examples.html examples} for more information.\n * ### Example\n ```html\n <x-chartist\n   [configuration]=\"configuration\"\n   [events]=\"events\"\n ></x-chartist>\n ```\n */\nclass ChartistComponent {\n  elementRef = inject(ElementRef);\n  configuration;\n  /**\n   * Events object where keys are Chartist event names and values are event handler functions.\n   *\n   * Supported events are: draw, optionsChanged, data, animationBegin, animationEnd, created.\n   *\n   * Event handler function will receive a data argument which contains event data.\n   */\n  events;\n  /**\n   * Event emitted after Chartist chart has been initialized.\n   *\n   * Event handler function will receive chart instance argument.\n   */\n  initialized = new EventEmitter();\n  chart;\n  ngOnInit() {\n    if (this.configuration.type && this.configuration.data) {\n      this.renderChart();\n    }\n  }\n  ngOnChanges(changes) {\n    this.update(changes);\n  }\n  ngOnDestroy() {\n    if (this.chart) {\n      this.chart.detach();\n      this.chart = null;\n    }\n  }\n  renderChart() {\n    const nativeElement = this.elementRef.nativeElement;\n    const {\n      type,\n      data,\n      options,\n      responsiveOptions\n    } = this.configuration;\n    if (type === \"Bar\") {\n      this.chart = new BarChart(nativeElement, data, options, responsiveOptions);\n    } else if (type === \"Line\") {\n      this.chart = new LineChart(nativeElement, data, options, responsiveOptions);\n    } else if (type === \"Pie\") {\n      this.chart = new PieChart(nativeElement, data, options, responsiveOptions);\n    } else {\n      throw new Error(`${type} is not a known chart type`);\n    }\n    if (this.events) {\n      this.bindEvents();\n    }\n    this.initialized.emit(this.chart);\n  }\n  update(changes) {\n    const {\n      type,\n      data,\n      options\n    } = this.configuration;\n    if (!type || !data) {\n      return;\n    }\n    const changedConfiguration = changes.configuration.currentValue;\n    if (!this.chart || changedConfiguration.type !== type) {\n      this.renderChart();\n    } else if (\"data\" in changedConfiguration || \"options\" in changedConfiguration) {\n      this.chart.update(data, options);\n    }\n  }\n  bindEvents() {\n    for (const event of Object.keys(this.events)) {\n      this.chart.on(event, this.events[event]);\n    }\n  }\n  static ɵfac = function ChartistComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ChartistComponent)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ChartistComponent,\n    selectors: [[\"x-chartist\"]],\n    inputs: {\n      configuration: \"configuration\",\n      events: \"events\"\n    },\n    outputs: {\n      initialized: \"initialized\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function ChartistComponent_Template(rf, ctx) {},\n    styles: [\"[_nghost-%COMP%]{display:block}\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartistComponent, [{\n    type: Component,\n    args: [{\n      selector: \"x-chartist\",\n      template: \"\",\n      styles: [\":host{display:block}\\n\"]\n    }]\n  }], null, {\n    configuration: [{\n      type: Input\n    }],\n    events: [{\n      type: Input\n    }],\n    initialized: [{\n      type: Output\n    }]\n  });\n})();\nclass ChartistModule {\n  static ɵfac = function ChartistModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ChartistModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ChartistModule,\n    imports: [ChartistComponent],\n    exports: [ChartistComponent]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ChartistModule, [{\n    type: NgModule,\n    args: [{\n      imports: [ChartistComponent],\n      exports: [ChartistComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ng-chartist-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChartistComponent, ChartistModule };\n"],
  "mappings": "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",
  "names": []
}
