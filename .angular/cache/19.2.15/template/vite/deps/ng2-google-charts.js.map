{
  "version": 3,
  "sources": ["../../../../../../node_modules/ng2-google-charts/fesm2015/ng2-google-charts.js"],
  "sourcesContent": ["import { __awaiter } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Output, LOCALE_ID, Injectable, Inject, Optional, ElementRef, Component, Input, NgModule } from '@angular/core';\nclass GoogleChartsDataTable {\n  constructor(opt) {\n    this.opt = opt;\n    this.dataTableChanged = new EventEmitter();\n    if (opt) {\n      this._setDataTable(opt.dataTable, opt.firstRowIsData);\n    }\n  }\n  send() {\n    if (this.query === undefined) {\n      return;\n    }\n    this.query.send(queryResponse => {\n      this.setDataTable(queryResponse.getDataTable());\n      if (this.opt.queryCallback) {\n        this.opt.queryCallback(queryResponse);\n      }\n    });\n  }\n  init(opt) {\n    if (opt) {\n      this.opt = opt;\n    }\n    if (this.tid !== undefined) {\n      // doesn't work, see https://github.com/google/google-visualization-issues/issues/2381\n      // this.query.abort();\n      window.clearInterval(this.tid);\n      this.tid = undefined;\n    }\n    if (this.opt.dataSourceUrl) {\n      this.query = new google.visualization.Query(this.opt.dataSourceUrl);\n      if (this.opt.query) {\n        this.query.setQuery(this.opt.query);\n      }\n      if (this.opt.timeout !== undefined) {\n        this.query.setTimeout(this.opt.timeout);\n      }\n      if (this.opt.refreshInterval) {\n        // this.query.setRefreshInterval(this.opt.refreshInterval);\n        this.tid = window.setInterval(() => {\n          this.send();\n        }, this.opt.refreshInterval * 1000);\n      }\n      this.send();\n    } else {\n      this.setDataTable(this.opt.dataTable);\n    }\n  }\n  /**\n   * @returns Underlying google.visualization.DataTable\n   */\n  getDataTable() {\n    return this.dataTable;\n  }\n  setDataTable(dt, firstRowIsData) {\n    if (firstRowIsData === undefined) {\n      firstRowIsData = this.opt.firstRowIsData;\n    }\n    this._setDataTable(dt, firstRowIsData);\n    this.dataTableChanged.emit(this.dataTable);\n  }\n  _setDataTable(dt, firstRowIsData) {\n    if (Array.isArray(dt)) {\n      dt = google.visualization.arrayToDataTable(dt, firstRowIsData);\n    }\n    this.dataTable = dt;\n    this.reformat();\n  }\n  /**\n   * Applies formatters to data columns, if defined\n   */\n  reformat() {\n    const dt = this.dataTable;\n    if (dt === undefined) {\n      return;\n    }\n    if (this.opt.formatters === undefined) {\n      return;\n    }\n    for (const formatterConfig of this.opt.formatters) {\n      let formatter;\n      if (formatterConfig.type === 'PatternFormat') {\n        const fmtOptions = formatterConfig.options;\n        formatter = new google.visualization.PatternFormat(fmtOptions.pattern);\n        formatter.format(dt, formatterConfig.columns, fmtOptions.dstColumnIndex);\n        continue;\n      }\n      const formatterConstructor = google.visualization[formatterConfig.type];\n      const formatterOptions = formatterConfig.options;\n      formatter = new formatterConstructor(formatterOptions);\n      if (formatterConfig.type === 'ColorFormat' && formatterOptions) {\n        const fmtOptions = formatterOptions;\n        if (fmtOptions.ranges) {\n          for (const range of fmtOptions.ranges) {\n            if (typeof range.fromBgColor !== 'undefined' && typeof range.toBgColor !== 'undefined') {\n              formatter.addGradientRange(range.from, range.to, range.color, range.fromBgColor, range.toBgColor);\n            } else {\n              formatter.addRange(range.from, range.to, range.color, range.bgcolor);\n            }\n          }\n        }\n      }\n      for (const col of formatterConfig.columns) {\n        formatter.format(dt, col);\n      }\n    }\n  }\n}\nGoogleChartsDataTable.ɵfac = function GoogleChartsDataTable_Factory(__ngFactoryType__) {\n  i0.ɵɵinvalidFactory();\n};\nGoogleChartsDataTable.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: GoogleChartsDataTable,\n  outputs: {\n    dataTableChanged: \"dataTableChanged\"\n  },\n  standalone: false\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleChartsDataTable, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: undefined\n    }];\n  }, {\n    dataTableChanged: [{\n      type: Output\n    }]\n  });\n})();\nclass ChartHTMLTooltip {\n  constructor(el) {\n    this.el = el;\n  }\n  setPosition(x, y) {\n    this.el.nativeElement.style.left = x + ChartHTMLTooltip.PIXELS;\n    this.el.nativeElement.style.top = y + ChartHTMLTooltip.PIXELS;\n  }\n  getDOMElement() {\n    return this.el;\n  }\n}\nChartHTMLTooltip.PIXELS = 'px';\nclass GoogleChartsLoaderService {\n  constructor(localeId, googleChartsSettings) {\n    this.googleChartsSettings = googleChartsSettings;\n    this.loadedPackages = [];\n    this.loaded = false;\n    const defaultSettings = {\n      googleChartsVersion: '50',\n      language: localeId\n    };\n    this.googleChartsSettings = Object.assign(Object.assign({}, defaultSettings), this.googleChartsSettings);\n    this.googleScriptLoadingNotifier = new EventEmitter();\n    this.googleChartLoadingNotifier = new EventEmitter();\n    this.googleScriptIsLoading = false;\n    this.googleChartIsLoading = false;\n    this.loadGoogleChartsScriptPromise = new Promise((resolve, reject) => {\n      if (typeof google !== 'undefined' && google.charts) {\n        resolve();\n      } else if (!this.googleScriptIsLoading) {\n        this.googleScriptIsLoading = true;\n        const script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.src = 'https://www.gstatic.com/charts/loader.js';\n        script.async = true;\n        script.defer = true;\n        script.onload = () => {\n          this.googleScriptIsLoading = false;\n          this.googleScriptLoadingNotifier.emit(true);\n          resolve();\n        };\n        script.onerror = () => {\n          this.googleScriptIsLoading = false;\n          this.googleScriptLoadingNotifier.emit(false);\n          reject();\n        };\n        document.getElementsByTagName('head')[0].appendChild(script);\n      } else {\n        this.googleScriptLoadingNotifier.subscribe(loaded => {\n          if (loaded) {\n            resolve();\n          } else {\n            reject();\n          }\n        });\n      }\n    });\n  }\n  load(settings) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.loadGoogleChartsScriptPromise;\n      yield new Promise(resolve => {\n        if (this.googleChartIsLoading) {\n          this.googleChartLoadingNotifier.subscribe(() => {\n            this.doLoad(resolve, settings);\n          });\n          return;\n        }\n        this.doLoad(resolve, settings);\n      });\n    });\n  }\n  doLoad(resolve, settings) {\n    settings = Object.assign(Object.assign({}, this.googleChartsSettings), settings);\n    if (!settings.packages && this.loaded) {\n      resolve();\n      return;\n    }\n    if (settings.packages) {\n      let pkgs = settings.packages.filter(p => this.loadedPackages.indexOf(p) < 0);\n      if (pkgs.length == 0 && this.loaded) {\n        resolve();\n        return;\n      }\n      settings.packages = pkgs;\n    }\n    const _settings = settings;\n    _settings.callback = () => {\n      this.googleChartIsLoading = false;\n      if (_settings.packages !== undefined) {\n        this.loadedPackages = this.loadedPackages.concat(_settings.packages);\n      }\n      this.loaded = true;\n      this.googleChartLoadingNotifier.emit();\n      resolve();\n    };\n    this.googleChartIsLoading = true;\n    google.charts.load(settings.googleChartsVersion, _settings);\n  }\n}\nGoogleChartsLoaderService.ɵfac = function GoogleChartsLoaderService_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || GoogleChartsLoaderService)(i0.ɵɵinject(LOCALE_ID), i0.ɵɵinject('googleChartsSettings', 8));\n};\nGoogleChartsLoaderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GoogleChartsLoaderService,\n  factory: GoogleChartsLoaderService.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleChartsLoaderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: ['googleChartsSettings']\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\nvar GoogleChartType;\n(function (GoogleChartType) {\n  GoogleChartType[\"AnnotationChart\"] = \"AnnotationChart\";\n  GoogleChartType[\"AreaChart\"] = \"AreaChart\";\n  GoogleChartType[\"BarChart\"] = \"BarChart\";\n  GoogleChartType[\"BubbleChart\"] = \"BubbleChart\";\n  GoogleChartType[\"Calendar\"] = \"Calendar\";\n  GoogleChartType[\"CandlestickChart\"] = \"CandlestickChart\";\n  GoogleChartType[\"ColumnChart\"] = \"ColumnChart\";\n  GoogleChartType[\"ComboChart\"] = \"ComboChart\";\n  GoogleChartType[\"Gantt\"] = \"Gantt\";\n  GoogleChartType[\"Gauge\"] = \"Gauge\";\n  GoogleChartType[\"GeoChart\"] = \"GeoChart\";\n  GoogleChartType[\"Histogram\"] = \"Histogram\";\n  GoogleChartType[\"LineChart\"] = \"LineChart\";\n  GoogleChartType[\"Map\"] = \"Map\";\n  GoogleChartType[\"OrgChart\"] = \"OrgChart\";\n  GoogleChartType[\"PieChart\"] = \"PieChart\";\n  GoogleChartType[\"Sankey\"] = \"Sankey\";\n  GoogleChartType[\"ScatterChart\"] = \"ScatterChart\";\n  GoogleChartType[\"SteppedAreaChart\"] = \"SteppedAreaChart\";\n  GoogleChartType[\"Table\"] = \"Table\";\n  GoogleChartType[\"Timeline\"] = \"Timeline\";\n  GoogleChartType[\"TreeMap\"] = \"TreeMap\";\n  GoogleChartType[\"VegaChart\"] = \"VegaChart\";\n  GoogleChartType[\"WordTree\"] = \"WordTree\";\n})(GoogleChartType || (GoogleChartType = {}));\nclass GoogleChartComponent {\n  constructor(el, loaderService) {\n    this.el = el;\n    this.loaderService = loaderService;\n    this.selectListener = () => {\n      const event = {\n        message: 'select',\n        row: null,\n        column: null,\n        selectedRowValues: [],\n        selectedRowFormattedValues: [],\n        columnLabel: ''\n      };\n      const s = this.wrapper.visualization.getSelection();\n      const gs = s[s.length - 1];\n      if (!gs) {\n        event.message = 'deselect';\n        return event;\n      }\n      const selection = gs;\n      if (gs.row != null) {\n        event.row = selection.row;\n        const selectedRowValues = [];\n        const selectedRowFormattedValues = [];\n        const dataTable = this.wrapper.getDataTable();\n        const numberOfColumns = dataTable.getNumberOfColumns();\n        for (let i = 0; i < numberOfColumns; i++) {\n          selectedRowValues.push(dataTable.getValue(selection.row, i));\n          selectedRowFormattedValues.push(dataTable.getFormattedValue(selection.row, i));\n        }\n        event.selectedRowValues = selectedRowValues;\n        event.selectedRowFormattedValues = selectedRowFormattedValues;\n      }\n      if (selection.column != null) {\n        event.column = selection.column;\n        event.columnLabel = this.getColumnLabelAtPosition(selection);\n      }\n      if (gs.name) {\n        event.columnLabel = gs.name;\n      }\n      return event;\n    };\n    this.chartSelect = new EventEmitter();\n    this.chartSelectOneTime = new EventEmitter();\n    this.chartReady = new EventEmitter();\n    this.chartReadyOneTime = new EventEmitter();\n    this.chartError = new EventEmitter();\n    this.chartErrorOneTime = new EventEmitter();\n    this.mouseOver = new EventEmitter();\n    this.mouseOverOneTime = new EventEmitter();\n    this.mouseOut = new EventEmitter();\n    this.mouseOutOneTime = new EventEmitter();\n    this.regionClick = new EventEmitter();\n    this.regionClickOneTime = new EventEmitter();\n  }\n  ngOnInit() {\n    this.HTMLel = this.el.nativeElement.querySelector('div');\n    if (Object.isExtensible(this.data)) {\n      this.data.component = this;\n    }\n    this.options = this.data.options;\n    this.init().then(() => {\n      this.draw();\n    });\n  }\n  init() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.loaderService.load();\n      this.recreateWrapper();\n    });\n  }\n  recreateWrapper() {\n    if (this.wrapper === undefined || this.wrapper.getChartType() !== this.data.chartType) {\n      this.dataTable = new GoogleChartsDataTable(this.data);\n      this.dataTable.dataTableChanged.subscribe(dt => {\n        this._draw();\n      });\n      // see dataTable in https://developers.google.com/chart/interactive/docs/reference#google.visualization.drawchart\n      let temp = this.data;\n      if (this.data.firstRowIsData) {\n        temp = Object.assign(temp, this.data);\n        temp.dataTable = this.dataTable.getDataTable();\n      }\n      this.wrapper = new google.visualization.ChartWrapper(temp);\n      this.registerChartWrapperEvents();\n      /* Calling draw even without data is the only way to pass the HTMl element\n         when using the chart in a dashboard. Don't do this in all other cases:\n         it breaks formatters with remote data source, hence the conditional. */\n      if (temp.dataTable === undefined && temp.dataSourceUrl === undefined) {\n        try {\n          this.wrapper.draw(this.HTMLel);\n        } catch (err) {}\n      }\n    }\n  }\n  _draw() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const dt = this.dataTable.getDataTable();\n      if (dt === undefined) {\n        return;\n      }\n      this.convertOptions();\n      this.recreateWrapper();\n      this.wrapper.setOptions(this.options);\n      this.wrapper.setDataTable(dt);\n      this.wrapper.draw(this.HTMLel);\n    });\n  }\n  getDataTable() {\n    return this.dataTable;\n  }\n  draw(value) {\n    if (value === undefined) {\n      value = this.data;\n    }\n    this.options = value.options;\n    this.dataTable.init(value);\n  }\n  getSelectorBySeriesType(seriesType) {\n    const selectors = {\n      bars: 'bar#%s#%r',\n      haxis: 'hAxis#0#label',\n      line: 'point#%s#%r',\n      legend: 'legendentry#%s',\n      area: 'point#%s#%r'\n    };\n    const selector = selectors[seriesType];\n    return selector;\n  }\n  /**\n   * Given a column number, counts how many\n   * columns have rol==\"data\". Those are mapped\n   * one-to-one to the series array. When rol is not defined\n   * a column of type number means a series column.\n   * @param column to inspect\n   */\n  getSeriesByColumn(column) {\n    let series = 0;\n    const dataTable = this.wrapper.getDataTable();\n    for (let i = column - 1; i >= 0; i--) {\n      const role = dataTable.getColumnRole(i);\n      const type = dataTable.getColumnType(i);\n      if (role === 'data' || type === 'number') {\n        series++;\n      }\n    }\n    return series;\n  }\n  getBoundingBoxForItem(item) {\n    let boundingBox = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0\n    };\n    if (this.cli) {\n      const column = item.column;\n      const series = this.getSeriesByColumn(column);\n      const row = item.row;\n      let seriesType = this.options.seriesType;\n      if (this.options.series && this.options.series[series] && this.options.series[series].type) {\n        seriesType = this.options.series[series].type;\n      }\n      if (seriesType) {\n        let selector = this.getSelectorBySeriesType(seriesType);\n        if (selector) {\n          selector = selector.replace('%s', series + '').replace('%c', column + '').replace('%r', row + '');\n          const box = this.cli.getBoundingBox(selector);\n          if (box) {\n            boundingBox = box;\n          }\n        }\n      }\n    }\n    return boundingBox;\n  }\n  getValueAtPosition(position) {\n    if (position.row == null) {\n      return null;\n    }\n    const dataTable = this.wrapper.getDataTable();\n    const value = dataTable.getValue(position.row, position.column);\n    return value;\n  }\n  getColumnTypeAtPosition(position) {\n    const dataTable = this.wrapper.getDataTable();\n    const type = dataTable.getColumnType(position.column) || '';\n    return type;\n  }\n  getColumnLabelAtPosition(position) {\n    const dataTable = this.wrapper.getDataTable();\n    const type = dataTable.getColumnLabel(position.column) || '';\n    return type;\n  }\n  getHTMLTooltip() {\n    const tooltipER = new ElementRef(this.el.nativeElement.querySelector('.google-visualization-tooltip'));\n    return new ChartHTMLTooltip(tooltipER);\n  }\n  parseMouseEvent(item) {\n    const chartType = this.wrapper.getChartType();\n    let eventColumn = item.column;\n    if (eventColumn == null) {\n      switch (chartType) {\n        case 'Timeline':\n          eventColumn = this.wrapper.getDataTable().getNumberOfColumns() === 3 ? 0 : 1;\n          break;\n        default:\n          eventColumn = 0;\n      }\n    }\n    const eventRow = item.row;\n    const myItem = {\n      row: eventRow,\n      column: eventColumn\n    };\n    const event = {\n      position: item,\n      boundingBox: this.getBoundingBoxForItem(myItem),\n      value: this.getValueAtPosition(myItem),\n      columnType: this.getColumnTypeAtPosition(myItem),\n      columnLabel: this.getColumnLabelAtPosition(myItem)\n    };\n    return event;\n  }\n  registerChartEvents() {\n    const chart = this.wrapper.getChart();\n    this.cli = chart.getChartLayoutInterface ? chart.getChartLayoutInterface() : null;\n    if (this.mouseOver.observers.length > 0) {\n      google.visualization.events.addListener(chart, 'onmouseover', item => {\n        const event = this.parseMouseEvent(item);\n        event.tooltip = this.getHTMLTooltip();\n        this.mouseOver.emit(event);\n      });\n    }\n    if (this.mouseOverOneTime.observers.length > 0) {\n      google.visualization.events.addOneTimeListener(chart, 'onmouseover', item => {\n        const event = this.parseMouseEvent(item);\n        event.tooltip = this.getHTMLTooltip();\n        this.mouseOverOneTime.emit(event);\n      });\n    }\n    if (this.mouseOut.observers.length > 0) {\n      google.visualization.events.addListener(chart, 'onmouseout', item => {\n        const event = this.parseMouseEvent(item);\n        this.mouseOut.emit(event);\n      });\n    }\n    if (this.mouseOutOneTime.observers.length > 0) {\n      google.visualization.events.addOneTimeListener(chart, 'onmouseout', item => {\n        const event = this.parseMouseEvent(item);\n        this.mouseOutOneTime.emit(event);\n      });\n    }\n    if (this.data.chartType === 'GeoChart') {\n      if (this.regionClick.observers.length > 0) {\n        google.visualization.events.addListener(chart, 'regionClick', item => {\n          this.regionClick.emit(item);\n        });\n      }\n      if (this.regionClickOneTime.observers.length > 0) {\n        google.visualization.events.addOneTimeListener(chart, 'regionClick', item => {\n          this.regionClick.emit(item);\n        });\n      }\n    }\n  }\n  registerChartWrapperEvents() {\n    google.visualization.events.addListener(this.wrapper, 'ready', () => {\n      this.chartReady.emit({\n        message: 'Chart ready'\n      });\n    });\n    google.visualization.events.addOneTimeListener(this.wrapper, 'ready', () => {\n      this.chartReadyOneTime.emit({\n        message: 'Chart ready (one time)'\n      });\n      this.registerChartEvents();\n    });\n    google.visualization.events.addListener(this.wrapper, 'error', error => {\n      this.chartError.emit(error);\n    });\n    google.visualization.events.addOneTimeListener(this.wrapper, 'error', error => {\n      this.chartErrorOneTime.emit(error);\n    });\n    this.addListener(this.wrapper, 'select', this.selectListener, this.chartSelect);\n    this.addOneTimeListener(this.wrapper, 'select', this.selectListener, this.chartSelectOneTime);\n  }\n  addListener(source, eventType, listenerFn, evEmitter) {\n    google.visualization.events.addListener(source, eventType, () => {\n      evEmitter.emit(listenerFn());\n    });\n  }\n  addOneTimeListener(source, eventType, listenerFn, evEmitter) {\n    google.visualization.events.addOneTimeListener(source, eventType, () => {\n      evEmitter.emit(listenerFn());\n    });\n  }\n  convertOptions() {\n    try {\n      this.options = google.charts[this.data.chartType].convertOptions(this.options);\n    } catch (error) {\n      return;\n    }\n  }\n}\nGoogleChartComponent.ɵfac = function GoogleChartComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || GoogleChartComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GoogleChartsLoaderService));\n};\nGoogleChartComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GoogleChartComponent,\n  selectors: [[\"google-chart\"]],\n  inputs: {\n    data: \"data\"\n  },\n  outputs: {\n    chartReady: \"chartReady\",\n    chartReadyOneTime: \"chartReadyOneTime\",\n    chartError: \"chartError\",\n    chartErrorOneTime: \"chartErrorOneTime\",\n    chartSelect: \"chartSelect\",\n    chartSelectOneTime: \"chartSelectOneTime\",\n    mouseOver: \"mouseOver\",\n    mouseOverOneTime: \"mouseOverOneTime\",\n    mouseOut: \"mouseOut\",\n    mouseOutOneTime: \"mouseOutOneTime\",\n    regionClick: \"regionClick\",\n    regionClickOneTime: \"regionClickOneTime\"\n  },\n  standalone: false,\n  decls: 1,\n  vars: 0,\n  template: function GoogleChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\");\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleChartComponent, [{\n    type: Component,\n    args: [{\n      selector: 'google-chart',\n      template: '<div></div>'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: GoogleChartsLoaderService\n    }];\n  }, {\n    data: [{\n      type: Input\n    }],\n    chartReady: [{\n      type: Output\n    }],\n    chartReadyOneTime: [{\n      type: Output\n    }],\n    chartError: [{\n      type: Output\n    }],\n    chartErrorOneTime: [{\n      type: Output\n    }],\n    chartSelect: [{\n      type: Output\n    }],\n    chartSelectOneTime: [{\n      type: Output\n    }],\n    mouseOver: [{\n      type: Output\n    }],\n    mouseOverOneTime: [{\n      type: Output\n    }],\n    mouseOut: [{\n      type: Output\n    }],\n    mouseOutOneTime: [{\n      type: Output\n    }],\n    regionClick: [{\n      type: Output\n    }],\n    regionClickOneTime: [{\n      type: Output\n    }]\n  });\n})();\nclass GoogleChartsDashboardComponent {\n  constructor(el, loaderService) {\n    this.el = el;\n    this.loaderService = loaderService;\n    this.el = el;\n    this.loaderService = loaderService;\n  }\n  ngOnInit() {\n    this.data.component = this;\n    this.init().then(() => {\n      if (!this.dataTable) {\n        this.dataTable = new GoogleChartsDataTable(this.data);\n        this.dataTable.dataTableChanged.subscribe(dt => {\n          this._draw();\n        });\n      }\n      this.draw();\n    });\n  }\n  init() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.loaderService.load({\n        packages: ['controls']\n      });\n      this.dashboard = new google.visualization.Dashboard(this.el.nativeElement.querySelector('div'));\n      for (const b of this.data.bind) {\n        let controls = b[0];\n        let charts = b[1];\n        if (!(controls instanceof Array)) {\n          controls = [controls];\n        }\n        if (!(charts instanceof Array)) {\n          charts = [charts];\n        }\n        for (const c of controls) {\n          yield c.component.ensureInit();\n        }\n        for (const c of charts) {\n          if (!c.component) {\n            continue;\n          }\n          yield c.component.init();\n          const data = c.component.data;\n          if (data.dataTable !== undefined || data.dataSourceUrl !== undefined) {\n            throw Error('dataTable and dataSourceUrl cannot be specified when ' + 'chart is drawn in a Dashboard');\n          }\n        }\n        this.dashboard.bind(controls.map(x => x.component.wrapper), charts.map(x => x.component.wrapper));\n      }\n    });\n  }\n  draw(value) {\n    this.dataTable.init(value);\n  }\n  _draw() {\n    this.dashboard.draw(this.dataTable.getDataTable());\n  }\n}\nGoogleChartsDashboardComponent.ɵfac = function GoogleChartsDashboardComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || GoogleChartsDashboardComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GoogleChartsLoaderService));\n};\nGoogleChartsDashboardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GoogleChartsDashboardComponent,\n  selectors: [[\"google-charts-dashboard\"]],\n  inputs: {\n    data: \"data\"\n  },\n  standalone: false,\n  decls: 1,\n  vars: 0,\n  template: function GoogleChartsDashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\");\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleChartsDashboardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'google-charts-dashboard',\n      template: '<div></div>'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: GoogleChartsLoaderService\n    }];\n  }, {\n    data: [{\n      type: Input\n    }]\n  });\n})();\nclass GoogleChartsControlComponent {\n  constructor(el, loaderService) {\n    this.el = el;\n    this.loaderService = loaderService;\n    this.el = el;\n    this.loaderService = loaderService;\n  }\n  ngOnInit() {\n    this.data.component = this;\n  }\n  ensureInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.wrapper) {\n        return;\n      }\n      yield this.loaderService.load({\n        packages: ['controls']\n      });\n      let opt;\n      opt = Object.create(this.data);\n      opt.containerId = this.el.nativeElement.querySelector('div');\n      this.wrapper = new google.visualization.ControlWrapper(opt);\n    });\n  }\n}\nGoogleChartsControlComponent.ɵfac = function GoogleChartsControlComponent_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || GoogleChartsControlComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(GoogleChartsLoaderService));\n};\nGoogleChartsControlComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GoogleChartsControlComponent,\n  selectors: [[\"google-charts-control\"]],\n  inputs: {\n    data: \"data\"\n  },\n  standalone: false,\n  decls: 1,\n  vars: 0,\n  template: function GoogleChartsControlComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\");\n    }\n  },\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleChartsControlComponent, [{\n    type: Component,\n    args: [{\n      selector: 'google-charts-control',\n      template: '<div></div>'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: GoogleChartsLoaderService\n    }];\n  }, {\n    data: [{\n      type: Input\n    }]\n  });\n})();\nclass Ng2GoogleChartsModule {}\nNg2GoogleChartsModule.ɵfac = function Ng2GoogleChartsModule_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || Ng2GoogleChartsModule)();\n};\nNg2GoogleChartsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: Ng2GoogleChartsModule,\n  declarations: [GoogleChartComponent, GoogleChartsDashboardComponent, GoogleChartsControlComponent],\n  exports: [GoogleChartComponent, GoogleChartsDashboardComponent, GoogleChartsControlComponent]\n});\nNg2GoogleChartsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [GoogleChartsLoaderService]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Ng2GoogleChartsModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [GoogleChartComponent, GoogleChartsDashboardComponent, GoogleChartsControlComponent],\n      providers: [GoogleChartsLoaderService],\n      exports: [GoogleChartComponent, GoogleChartsDashboardComponent, GoogleChartsControlComponent]\n    }]\n  }], null, null);\n})();\nfunction isComponent(chart) {\n  return chart.wrapper !== undefined;\n}\nclass GoogleChartEditor {\n  constructor(loaderService) {\n    this.loaderService = loaderService;\n  }\n  createEditor() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.chartEditor !== undefined) {\n        return;\n      }\n      yield this.loaderService.load({\n        packages: ['charteditor']\n      });\n      this.chartEditor = new google.visualization.ChartEditor();\n      google.visualization.events.addListener(this.chartEditor, 'ok', () => {\n        const wrapper = this.chartEditor.getChartWrapper();\n        this.comp.wrapper = wrapper;\n        this.comp.data.chartType = wrapper.getChartType();\n        if (this.comp.data.options !== undefined || Object.isExtensible(this.comp.data)) {\n          this.comp.data.options = wrapper.getOptions();\n        }\n        this.comp.wrapper.draw();\n      });\n    });\n  }\n  openDialog(chart, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.createEditor();\n      return new Promise((resolve, reject) => {\n        this.comp = isComponent(chart) ? chart : chart.component;\n        google.visualization.events.addListener(this.chartEditor, 'ok', () => {\n          resolve(this.comp.wrapper);\n        });\n        google.visualization.events.addListener(this.chartEditor, 'cancel', () => {\n          reject();\n        });\n        this.chartEditor.openDialog(this.comp.wrapper, options);\n      });\n    });\n  }\n}\nGoogleChartEditor.ɵfac = function GoogleChartEditor_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || GoogleChartEditor)(i0.ɵɵinject(GoogleChartsLoaderService));\n};\nGoogleChartEditor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GoogleChartEditor,\n  factory: GoogleChartEditor.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleChartEditor, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: GoogleChartsLoaderService\n    }];\n  }, null);\n})();\n\n/*\n * Public API Surface of ng2-google-charts\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ChartHTMLTooltip, GoogleChartComponent, GoogleChartEditor, GoogleChartType, GoogleChartsControlComponent, GoogleChartsDashboardComponent, GoogleChartsLoaderService, Ng2GoogleChartsModule };\n"],
  "mappings": "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",
  "names": ["GoogleChartType"]
}
