import { Injectable, Optional } from '@angular/core';
import Locals from './Locals';
import Icon from './icons';
import * as i0 from "@angular/core";
import * as i1 from "./editor-config.service";
export class NgxEditorService {
    config;
    constructor(config) {
        this.config = config;
    }
    get locals() {
        return new Locals(this.config.locals);
    }
    getIcon(icon) {
        return this.config.icons[icon] ? this.config.icons[icon] : Icon.get(icon);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: NgxEditorService, deps: [{ token: i1.NgxEditorServiceConfig, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: NgxEditorService, providedIn: 'root' });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.2", ngImport: i0, type: NgxEditorService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: () => [{ type: i1.NgxEditorServiceConfig, decorators: [{
                    type: Optional
                }] }] });
export const provideMyServiceOptions = (config) => {
    return {
        locals: config.locals ?? {},
        icons: config.icons ?? {},
    };
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWRpdG9yLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZWRpdG9yL3NyYy9saWIvZWRpdG9yLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHckQsT0FBTyxNQUFNLE1BQU0sVUFBVSxDQUFDO0FBRTlCLE9BQU8sSUFBSSxNQUFNLFNBQVMsQ0FBQzs7O0FBTTNCLE1BQU0sT0FBTyxnQkFBZ0I7SUFDM0IsTUFBTSxDQUF5QjtJQUUvQixZQUF3QixNQUErQjtRQUNyRCxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztJQUN2QixDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxPQUFPLENBQUMsSUFBWTtRQUNsQixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM1RSxDQUFDO3VHQWJVLGdCQUFnQjsyR0FBaEIsZ0JBQWdCLGNBRmYsTUFBTTs7MkZBRVAsZ0JBQWdCO2tCQUg1QixVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQjs7MEJBSWMsUUFBUTs7QUFhdkIsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsQ0FBQyxNQUF3QixFQUEwQixFQUFFO0lBQzFGLE9BQU87UUFDTCxNQUFNLEVBQUUsTUFBTSxDQUFDLE1BQU0sSUFBSSxFQUFFO1FBQzNCLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSyxJQUFJLEVBQUU7S0FDMUIsQ0FBQztBQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE5neEVkaXRvckNvbmZpZyB9IGZyb20gJy4vdHlwZXMnO1xuaW1wb3J0IExvY2FscyBmcm9tICcuL0xvY2Fscyc7XG5pbXBvcnQgeyBOZ3hFZGl0b3JTZXJ2aWNlQ29uZmlnIH0gZnJvbSAnLi9lZGl0b3ItY29uZmlnLnNlcnZpY2UnO1xuaW1wb3J0IEljb24gZnJvbSAnLi9pY29ucyc7XG5pbXBvcnQgeyBIVE1MIH0gZnJvbSAnLi90cnVzdGVkVHlwZXNVdGlsJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIE5neEVkaXRvclNlcnZpY2Uge1xuICBjb25maWc6IE5neEVkaXRvclNlcnZpY2VDb25maWc7XG5cbiAgY29uc3RydWN0b3IoQE9wdGlvbmFsKCkgY29uZmlnPzogTmd4RWRpdG9yU2VydmljZUNvbmZpZykge1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnO1xuICB9XG5cbiAgZ2V0IGxvY2FscygpOiBMb2NhbHMge1xuICAgIHJldHVybiBuZXcgTG9jYWxzKHRoaXMuY29uZmlnLmxvY2Fscyk7XG4gIH1cblxuICBnZXRJY29uKGljb246IHN0cmluZyk6IEhUTUwge1xuICAgIHJldHVybiB0aGlzLmNvbmZpZy5pY29uc1tpY29uXSA/IHRoaXMuY29uZmlnLmljb25zW2ljb25dIDogSWNvbi5nZXQoaWNvbik7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHByb3ZpZGVNeVNlcnZpY2VPcHRpb25zID0gKGNvbmZpZz86IE5neEVkaXRvckNvbmZpZyk6IE5neEVkaXRvclNlcnZpY2VDb25maWcgPT4ge1xuICByZXR1cm4ge1xuICAgIGxvY2FsczogY29uZmlnLmxvY2FscyA/PyB7fSxcbiAgICBpY29uczogY29uZmlnLmljb25zID8/IHt9LFxuICB9O1xufTtcbiJdfQ==